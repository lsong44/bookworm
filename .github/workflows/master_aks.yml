name: Build and deploy JAR app to AKS - bookworm

on: 
  push:
    branches:
      - master
  workflow_dispatch:
  workflow_dispatch:

env:
  REGISTRY_NAME: crbookworm
  CLUSTER_NAME: aks-bookworm
  CLUSTER_RESOURCE_GROUP: rg-bookworm
  NAMESPACE: bookworm
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Login to ACR 
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }} 
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push container image
      run: |
        docker buildx build ./mainProj -f ./mainProj/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/imagebookworm:${{ github.sha }} 
        docker buildx build ./mainProj -f ./mainProj/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/imagebookworm:${{ github.sha }} 
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/imagebookworm:${{ github.sha }}
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Set up kubectl
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - name: Set up database connection parameters
      run: |
        kubectl create secret generic cosmosdb-secret \
        --from-literal=ACCOUNT_HOST=${{ secrets.COSMOSDB_HOST}} \
        --from-literal=ACCOUNT_KEY=${{ secrets.COSMOSDB_KEY}} \
        --from-literal=DB_NAME=${{ secrets.COSMOSDB_DBNAME}} \
        -n ${{ env.NAMESPACE }}

    - name: Create imagepullsecret for ACR
      uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.ACR_USERNAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    - name: Deploy to AKS
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/imagebookworm:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}